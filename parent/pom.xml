<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.8.RELEASE</version>
    </parent>

    <groupId>com.chenlong</groupId>
    <artifactId>parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <org.springframework.boot.version>1.3.8.RELEASE</org.springframework.boot.version>
        <org.springframework.version>4.2.8.RELEASE</org.springframework.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Brixton.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--<dependency>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-starter-web</artifactId>-->
                <!--<version>${org.springframework.boot.version}</version>-->
                <!--<exclusions>-->
                    <!--<exclusion>-->
                        <!--<groupId>org.springframework.boot</groupId>-->
                        <!--<artifactId>spring-boot-starter-logging</artifactId>-->
                    <!--</exclusion>-->
                <!--</exclusions>-->
            <!--</dependency>-->
            <!--<dependency>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-starter-log4j</artifactId>-->
                <!--<version>${org.springframework.boot.version}</version>-->
            <!--</dependency>-->

            <!--<dependency>-->
                <!--<groupId>org.springframework.cloud</groupId>-->
                <!--<artifactId>spring-cloud-starter-config</artifactId>-->
                <!--<version>${org.springframework.boot.version}</version>-->
            <!--</dependency>-->

            <!--<dependency>-->
                <!--<groupId>org.springframework.cloud</groupId>-->
                <!--<artifactId>spring-cloud-starter-eureka-server</artifactId>-->
                <!--<version>${org.springframework.boot.version}</version>-->
            <!--</dependency>-->

            <!--<dependency>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-starter-actuator</artifactId>-->
                <!--<version>${org.springframework.boot.version}</version>-->
            <!--</dependency>-->

            <!--<dependency>-->
                <!--<groupId>org.springframework.cloud</groupId>-->
                <!--<artifactId>spring-cloud-config-server</artifactId>-->
                <!--<version>${org.springframework.boot.version}</version>-->
            <!--</dependency>-->

            <!--<dependency>-->
                <!--<groupId>org.springframework.cloud</groupId>-->
                <!--<artifactId>spring-cloud-starter-hystrix-dashboard</artifactId>-->
                <!--<version>${org.springframework.boot.version}</version>-->
            <!--</dependency>-->

            <!--<dependency>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-starter-actuator</artifactId>-->
                <!--<version>${org.springframework.boot.version}</version>-->
            <!--</dependency>-->
            <!--&lt;!&ndash;Feign是一个声明式的Web Service客户端，它使得编写Web Serivce客户端变得更加简单。-->
            <!--我们只需要使用Feign来创建一个接口并用注解来配置它既可完成。-->
            <!--它具备可插拔的注解支持，包括Feign注解和JAX-RS注解。Feign也支持可插拔的编码器和解码器。-->
            <!--Spring Cloud为Feign增加了对Spring MVC注解的支持，-->
            <!--还整合了Ribbon和Eureka来提供均衡负载的HTTP客户端实现。&ndash;&gt;-->
            <!--<dependency>-->
                <!--<groupId>org.springframework.cloud</groupId>-->
                <!--<artifactId>spring-cloud-starter-feign</artifactId>-->
                <!--<exclusions>-->
                    <!--<exclusion>-->
                        <!--<groupId>org.springframework.cloud</groupId>-->
                        <!--<artifactId>spring-boot-starter-ribbon</artifactId>-->
                    <!--</exclusion>-->
                <!--</exclusions>-->
                <!--<version>${org.springframework.boot.version}</version>-->
            <!--</dependency>-->
            <!--&lt;!&ndash;Ribbon是一个基于HTTP和TCP客户端的负载均衡器 &ndash;&gt;-->
            <!--&lt;!&ndash;Ribbon可以在通过客户端中配置的ribbonServerList服务端列表去轮询访问以达到均衡负载的作用。-->
              <!--当Ribbon与Eureka联合使用时，ribbonServerList会被DiscoveryEnabledNIWSServerList重写，-->
              <!--扩展成从Eureka注册中心中获取服务端列表。同时它也会用NIWSDiscoveryPing来取代IPing，-->
              <!--它将职责委托给Eureka来确定服务端是否已经启动。&ndash;&gt;-->
            <!--<dependency>-->
                <!--<groupId>org.springframework.cloud</groupId>-->
                <!--<artifactId>spring-cloud-starter-ribbon</artifactId>-->
                <!--<version>${org.springframework.boot.version}</version>-->
            <!--</dependency>-->
            <!--&lt;!&ndash; 使用eureka &ndash;&gt;-->
            <!--<dependency>-->
                <!--<groupId>org.springframework.cloud</groupId>-->
                <!--<artifactId>spring-cloud-starter-eureka</artifactId>-->
                <!--<version>${org.springframework.boot.version}</version>-->

            <!--</dependency>-->
            <!--&lt;!&ndash; 使用hystrix &ndash;&gt;-->
            <!--<dependency>-->
                <!--<groupId>org.springframework.cloud</groupId>-->
                <!--<artifactId>spring-cloud-starter-hystrix</artifactId>-->
                <!--<version>${org.springframework.boot.version}</version>-->
            <!--</dependency>-->

            <!--<dependency>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-starter-test</artifactId>-->
                <!--<version>${org.springframework.boot.version}</version>-->

                <!--<scope>test</scope>-->
            <!--</dependency>-->
            <dependency>
                <groupId>org.jolokia</groupId>
                <artifactId>jolokia-core</artifactId>
                <version>1.3.4</version>
            </dependency>

            <dependency>
                <groupId>org.apache.tomcat</groupId>
                <artifactId>tomcat-jdbc</artifactId>
                <version>8.0.37</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>3.2.8</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.1.34</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>1.2.2</version>
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>2.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>2.1</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Nexus Release Repository</name>
            <url>http://nexus.corp.rs.com/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Nexus Snapshot Repository</name>
            <url>http://nexus.corp.rs.com/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <build>
        <plugins>
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-source-plugin</artifactId>-->
                <!--<version>2.1.2</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>attach-sources</id>-->
                        <!--<phase>verify</phase>-->
                        <!--<goals>-->
                            <!--<goal>jar-no-fork</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-javadoc-plugin</artifactId>-->
                <!--<version>2.10.4</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>attach-javadocs</id>-->
                        <!--<goals>-->
                            <!--<goal>jar</goal>-->
                        <!--</goals>-->
                        <!--&lt;!&ndash;在jdk7环境 关闭此配置否则会报：Exit code: 1 - javadoc: 错误 - 无效的标记: -Xdoclint:none&ndash;&gt;-->
                        <!--&lt;!&ndash;jdk8需要开启此选项 用于关闭doclint 对无参数注解的检查&ndash;&gt;-->
                        <!--&lt;!&ndash;doclint link: http://openjdk.java.net/jeps/172-->
                        <!--单独执行 mvn javadoc:javadoc 在jdk1.8需要增加 -Dadditionalparam=-Xdoclint:none-->
                         <!--解决jdk6,7,8都兼容 方案：http://jdpgrailsdev.github.io/blog/2014/04/03/maven_java8_javadoc.html&ndash;&gt;-->
                        <!--<configuration>-->
                            <!--<additionalparam>${javadoc.opts}</additionalparam>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
                <!--<configuration>-->
                    <!--<encoding>UTF-8</encoding>-->
                    <!--<charset>UTF-8</charset>-->
                <!--</configuration>-->
            <!--</plugin>-->
            <!-- 指定maven编译的jdk版本 -->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-compiler-plugin</artifactId>-->
                <!--<version>3.6.1</version>-->
                <!--<configuration>-->
                    <!--<source>1.8</source>-->
                    <!--<target>1.8</target>-->
                    <!--<encoding>UTF-8</encoding>-->
                <!--</configuration>-->
            <!--</plugin>-->
            <!--<plugin>-->
                <!--<groupId>org.codehaus.mojo</groupId>-->
                <!--<artifactId>sonar-maven-plugin</artifactId>-->
                <!--<version>2.7.1</version>-->
            <!--</plugin>-->
            <!--<plugin>-->
                <!--<groupId>org.codehaus.mojo</groupId>-->
                <!--<artifactId>cobertura-maven-plugin</artifactId>-->
                <!--<version>2.7</version>-->
                <!--<configuration>-->
                    <!--<formats>-->
                        <!--<format>html</format>-->
                        <!--<format>xml</format>-->
                    <!--</formats>-->
                    <!--<check/>-->
                <!--</configuration>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>cobertura</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->
            <!--jacoco单元测试覆盖率报告-->
            <!--<plugin>-->
                <!--<groupId>org.jacoco</groupId>-->
                <!--<artifactId>jacoco-maven-plugin</artifactId>-->
                <!--<version>0.7.9</version>-->
                <!--<configuration>-->
                    <!--<outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>-->
                    <!--&lt;!&ndash;排除不需要单元测试覆盖率测试的类 本地使用 如果在sonars上过滤需要到sonar上配置&ndash;&gt;-->
                    <!--&lt;!&ndash;<excludes>&ndash;&gt;-->
                    <!--&lt;!&ndash;<exclude>**/utils/*</exclude>&ndash;&gt;-->
                    <!--&lt;!&ndash;</excludes>&ndash;&gt;-->
                <!--</configuration>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<goals>-->
                            <!--<goal>prepare-agent</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>report</id>-->
                        <!--<phase>prepare-package</phase>-->
                        <!--<goals>-->
                            <!--<goal>report</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>post-unit-test</id>-->
                        <!--<phase>test</phase>-->
                        <!--<goals>-->
                            <!--<goal>report</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${org.springframework.boot.version}</version>
                <configuration>
                    <executable>true</executable>
                </configuration>
            </plugin>
        </plugins>
        <!--<defaultGoal>compile</defaultGoal>-->
    </build>

    <!--只有使用jdk1.8或更高的版本才激活-->
    <profiles>
        <profile>
            <id>java8-doclint-disabled</id>
            <activation>
                <jdk>[1.8,)</jdk>
            </activation>
            <properties>
                <javadoc.opts>-Xdoclint:none</javadoc.opts>
            </properties>
        </profile>
    </profiles>

</project>